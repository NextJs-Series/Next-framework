import Head from 'next/head';
import { useRouter } from 'next/router';
import styles from '/styles/Home.module.css'
export default function Post({ post }) {
    const router = useRouter()
    if (router.isFallback) {
        return <h1 style={{ color: 'red', position: 'absolute', top: '50%', left: '50%', transform: 'translate(-50%,-50%)' }} >Loading...</h1>
    }

    return (
        <div>
            <Head>
                <title>Next js </title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>

                <p className={styles.title}>
                    <a>{post.title}</a>
                </p>
                <div style={{ width: '30%' }} >
                    <p>{post.id} : {post.body}</p>

                </div>
            </main>
        </div>
    )
}

export async function getStaticPaths() {
    const response = await fetch('https://jsonplaceholder.typicode.com/posts')
    const data = await response.json()
    const paths = data.map(post => {
        return {
            params: {
                postId: `${post.id}`
            }
        }
    })

    return {
        paths: [
            {
                params: { postId: '1' },
            },
            {
                params: { postId: '2' },
            },
            {
                params: { postId: '3' },
            },
            {
                params: { postId: '4' },
            },
            {
                params: { postId: '5' },
            },
        ],
        fallback: true,
    }
}

export async function getStaticProps(context) {
    const { params } = context
    const response = await fetch(`https://jsonplaceholder.typicode.com/posts/${params.postId}`)
    const data = await response.json()

    if (!data.id) {
        return {
            notFound: true,
        }
    }

    console.log(`Generating page for /posts/${params.postId}`)
    return {
        props: {
            post: data
        }
    }
}